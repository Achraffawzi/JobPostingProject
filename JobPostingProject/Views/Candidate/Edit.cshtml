@model JobPostingProject.Models.CandidateEditProfileViewModel
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Edit Profile";
}

<div class="container">
    <h2>Edit Profile</h2>

    @using (Html.BeginForm("Edit", "Candidate", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.CandidateSecondID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" class="form-control" value="@(ViewBag.UniqueID)" disabled="disabled" readonly="readonly" name="CandidateSecondID" />
                    @Html.ValidationMessageFor(model => model.CandidateSecondID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Bio, new { @class = "ckeditor" })
                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                </div>
            </div>
            @*-----------------------------------------------------------------------------------------------------------------*@
            <div class="row">
                <div class="col-md">
                    <div class="form-group ">
                        @Html.LabelFor(m => m.Cv, new { @class = "col-md control-label" })
                        <div class="col-md">
                            <input type="file" class="form-control-file" name="CvFileName" accept="text/*" />
                            @Html.ValidationMessage("CvFile", "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.CoverLetter, new { @class = "col-md control-label" })
                        <div class="col-md">
                            <input type="file" class="form-control-file" name="CoverLetterFileName" accept="text/*" />
                            @Html.ValidationMessage("CoverLettreFile", "", new { @class = "text-danger" })
                        </div>
                    </div>
                  
                    <div class="form-group mt-2">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" class="btn btn-primary" value="Register" />
                        </div>
                    </div>
                </div>
                <div class="col-md">
                    <div class="form-group ">
                        Profile Photo
                        <div class="col-md ">
                            <div class="image-wrapper">
                                <input type="file" class="image-uploader form-control-file" name="PhotoFileName" accept="image/*" />
                                <img src="@Model.Photo" class="image-preview" alt="Default Image" />
                                <span class="image-hint">Upload Your Image</span>
                                @Html.ValidationMessage("PhotoFile", "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Profile", "Index", new { idUser = User.Identity.GetUserId() })
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="//cdn.ckeditor.com/4.16.0/basic/ckeditor.js"></script>
    <script>
        // Replace the <textarea id="editor1"> with a CKEditor 4
        // instance, using default configuration.
        CKEDITOR.replace('Description');
    </script>
}
