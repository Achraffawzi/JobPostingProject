@model JobPostingProject.Models.Announcement

@{
    ViewBag.Title = "Home Page";
    List<int> totalAll = (List<int>)ViewBag.TotalEverything;
}

@* Banner *@
<div class="banner">
    <div class="container text-center">
        <h1>we design your future!</h1>
        <p>get yourself the best oportunity of your life and apply for your dream job now!</p>
        @Html.ActionLink("Search for a job", "InitialIndex", "Announcement", new { }, new { @class = "search-btn text-decoration-none" })
    </div>
</div>

@* Job categories available *@

<!-- Statistics section -->
<h3 class="text-center text-primary my-5">Statistics about the applications</h3>
<div class="container my-5">
    <div class="row">
        <div class="col-lg-6 mb-4 mb-lg-0">
            <div class="stat">
                <canvas id="myChart"></canvas>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="stat">
                <canvas id="myPieChart" style="height: 262px;"></canvas>
            </div>
        </div>
    </div>
</div>
@* features counter up *@
<div class="features text-center py-5">
    <div class="container">
        <div class="row">
            @* Total candidates *@
            <div class="col-md-6 col-lg-3">
                <div class="feature total-candidates">
                    <i class="fas fa-users"></i>
                    <span class="d-block candidates-counter"></span>
                    <span class="d-block">Total Candidates</span>
                </div>
            </div>
            @* Total companies *@
            <div class="col-md-6 col-lg-3">
                <div class="feature total-companies">
                    <i class="fas fa-building"></i>
                    <span class="d-block companies-counter"></span>
                    <span class="d-block">Total Companies</span>
                </div>
            </div>
            @* Total applications *@
            <div class="col-md-6 col-lg-3">
                <div class="feature total-applications">
                    <i class="fas fa-paper-plane"></i>
                    <span class="d-block applications-counter"></span>
                    <span class="d-block">Total Applications</span>
                </div>
            </div>
            @* Total announcements *@
            <div class="col-md-6 col-lg-3">
                <div class="feature total-announcements">
                    <i class="fas fa-copy"></i>
                    <span class="d-block announcements-counter"></span>
                    <span class="d-block">Total Announcements</span>
                </div>
            </div>
        </div>
    </div>
</div>

@* All job categories available *@
<div class="text-center job-categories">
    <div class="container">
        <h3 class="text-primary pt-4">Our job categories list</h3>
        <div class="row">
            @foreach (var item in ViewBag.Categories)
            {
                <div class="col-md-4 col-lg-2 my-4">
                    <div class="category bg-white text-center border-primary border-top border-left border-bottom border-right">
                        <span class="text-primary">@item.CategoryName</span>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



@section Home {
    <link href="@Url.Content("~/Content/Home.css")" rel="stylesheet" type="text/css" />
}

@section Scripts {
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="~/Scripts/jquery.countTo.js"></script>
    <script>
        $(document).ready(function () {
            var once = true;
        });
            $.ajax({

                type: "POST",
                url: "/Home/GetJobPortionByCategory",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (xhr) {
                    var data = xhr;
                    var partitions = data[0];
                    var categoryNames = data[1];
                    var ctx = $("#myChart").get(0).getContext("2d");
                    var myNewChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: categoryNames,
                            datasets: [{
                                //label: categoryNames,
                                data: partitions,
                                fill: false,
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.6)',
                                    'rgba(54, 162, 235, 0.6)',
                                    'rgba(255, 206, 86, 0.6)',
                                    'rgba(153, 102, 255, 0.6)',
                                    'rgba(255, 159, 64, 0.6)'
                                ]
                            }]
                        }
                        ,
                        options: {
                            responsive: true,
                            title: { display: true, text: 'Jobs\' partitions by job category' },
                            legend: { display: true, },
                            legend: {
                                display: false,
                            }
                        },

                    });
                },
                failure: function (err) {
                    console.log(err);
                }
            });

        $.ajax({

            type: "POST",
            url: "/Home/GetJobPortionByLevel",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (xhr) {
                var data = xhr;
                var partitions = data[0];
                var levelNames = data[1];
                var ctx = $("#myPieChart").get(0).getContext("2d");
                var myNewChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: levelNames,
                        datasets: [{
                            data: partitions,
                            fill: false,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.6)',
                                'rgba(54, 162, 235, 0.6)',
                                'rgba(255, 206, 86, 0.6)',
                                'rgba(153, 102, 255, 0.6)',
                            ]
                        }]
                    }
                    ,
                    options: {
                        responsive: true,
                        title: { display: true, text: 'Jobs\' partitions by job level' },
                        legend: { display: true, },
                    }
                });
            },
            failure: function (err) {
                console.log(err);
            }
        });

        var once = true;
        $(window).on("scroll", function () {
            if (isScrolledIntoView($(".features")) && once) {
                once = false;
                // Adding the countTo functionality
                $(".candidates-counter").countTo({
                    from: 0,
                    to: @(totalAll[0]),
                    speed: 3000,
                });

                $(".companies-counter").countTo({
                    from: 0,
                    to: @(totalAll[1]),
                    speed: 2000,
                });

                $(".applications-counter").countTo({
                    from: 0,
                    to: @(totalAll[2]),
                    speed: 2000,
                });

                $(".announcements-counter").countTo({
                    from: 0,
                    to: @(totalAll[3]),
                    speed: 2000,
                });
            }
        });

        function isScrolledIntoView(elem) {
            var $elem = $(elem);
            var $window = $(window);

            var docViewTop = $window.scrollTop();
            var docViewBottom = docViewTop + $window.height();

            var elemTop = $elem.offset().top;
            var elemBottom = elemTop + $elem.height();

            return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));
        }


    </script>
}