@model JobPostingProject.Models.RegisterViewModelCandidate
@{
    ViewBag.Title = "Register as Candidate";
}


<div class="container">
    <h4 class="mt-4">@ViewBag.Title.</h4>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", id = "form-register" }))
    {
        @Html.AntiForgeryToken()

        @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
        <div class="row mt-5">
            <div class="form-group col-md">

                <div class="col-md">
                    <div class="form-group ">
                        @*@Html.LabelFor(m => m.FirstName, new { @class = "control-label" })*@
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "Fist Name", id = "fName" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="form-group col-md">

                <div class="col-md">
                    <div class="form-group ">
                        @*@Html.LabelFor(m => m.LastName, new { @class = "control-label" })*@
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name", id = "lName" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md">

                <div class="col-md">
                    <div class="form-group ">
                        @*@Html.LabelFor(m => m.DateOfBirth, new { @class = "control-label" })*@
                        @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                    </div>

                    @*<input type="date" class="form-control" name="DateOfBirth" />
                        @Html.ValidationMessage("DateOfBirth", "", new { @class = "text-danger" })*@

                </div>
            </div>
            <div class="form-group col-md">

                <div class="col-md">
                    <div class="form-group ">
                        @*@Html.LabelFor(m => m.Adresse, new { @class = "control-label" })*@
                        @Html.TextBoxFor(m => m.Adresse, new { @class = "form-control", placeholder = "Adresse" })
                        @Html.ValidationMessageFor(m => m.Adresse, "", new { @class = "text-danger" })

                    </div>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md">
                <div class="col-md">
                    <div class="form-group ">
                        @*@Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label" })*@
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Phone Number" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="form-group col-md">

                <div class="col-md">
                    <div class="form-group ">
                        @*@Html.LabelFor(m => m.Email, new { @class = "control-label" })*@
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
        <div class="form-group ">
            <div class="col-md">
                <div class="form-group ">
                    @*@Html.LabelFor(m => m.Bio, new { @class = "control-label" })*@
                    @*@Html.TextAreaFor(m => m.Bio, new { @class = "form-control", placeholder = "Bio", style = "height:230px" })*@
                    @Html.TextAreaFor(model => model.Bio, new { @class = "ckeditor", placeholder = "Bio" })
                    @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>



        <div class="row">
            <div class="col-md">
                <div class="form-group ">
                    @Html.LabelFor(m => m.CV, new { @class = "col-md control-label" })
                    <div class="col-md">
                        <input type="file" class="form-control-file" name="CvFileName" accept="text/*" />
                        @Html.ValidationMessage("CvFile", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.CoverLetter, new { @class = "col-md control-label" })
                    <div class="col-md">
                        <input type="file" class="form-control-file" name="CoverLetterFileName" accept="text/*" />
                        @Html.ValidationMessage("CoverLettreFile", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(m => m.Password, new { @class = "col-md control-label" })*@
                    <div class="col-md">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md control-label" })*@
                    <div class="col-md">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                    </div>
                </div>
                <div class="form-group mt-2">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-primary" value="Register" />
                    </div>
                </div>
            </div>
            <div class="col-md">
                <div class="form-group ">
                    Profile Photo
                    <div class="col-md ">
                        <div class="image-wrapper">
                            <input type="file" class="image-uploader form-control-file" name="PhotoFileName" accept="image/*" />
                            <img src="~/Images/UserDefaultImage/defaultImage.jpg" class="image-preview" alt="Default Image" />
                            <span class="image-hint">Upload Your Image</span>
                            @Html.ValidationMessage("PhotoFile", "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>



    }

    <div class="form-group mt-2">
        <div class="col-md-offset-2 col-md-10">
            <span>Are you a company?</span>  <a href="@Url.Content("~/Account/RegisterCompany")" class="text-primary">Register Here</a>
        </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/Site.css" rel="stylesheet" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script src="//cdn.ckeditor.com/4.16.0/basic/ckeditor.js"></script>
    <script>
        // Replace the <textarea id="editor1"> with a CKEditor 4
        // instance, using default configuration.
        CKEDITOR.replace('Description');
    </script>
    <script>
        $("#form-register").submit(function () {
            localStorage.setItem("firstName", $("#fName").val());
            localStorage.setItem("lastName", $("#lName").val());
        })


        const imageUploader = document.querySelector(".image-uploader");
        const imagePreview = document.querySelector(".image-preview");

        imageUploader.addEventListener('change',  (e)=> {
            let file = e.target.files[0];
            let reader = new FileReader();

            // NOTE: If an image SELECTED DO this
            if (file) {
                reader.readAsDataURL(file);
            }
            // NOTE: Set The Source / 'src' tag  of image
            reader.addEventListener('load', function () {
                console.log(reader.result);
                imagePreview.setAttribute('src', reader.result);
            });
        });
    </script>
}